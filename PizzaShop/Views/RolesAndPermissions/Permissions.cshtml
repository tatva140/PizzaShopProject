@model DAL.ViewModels.PermissionsViewModel;
@{
     ViewData["HideLayout"]="false";
}
 
 <div class="content p-3" id="content">
    <h1  style="color: rgb(30, 151, 231);font-weight: 600;">Permissions</h1>
    <div style="background-color: white; border-radius: 8px;">
      <div class="p-3">
        <div class="form-floating col-md-6">
          <input type="text" class="form-control " id="role" name="role" placeholder="First Name" readonly style="background-color: rgb(250, 250, 250);">
          <label for="role">@Model.RoleName</label>
        </div>
      </div>
      <div class="table-responsive me-2 ms-2 ">
        <table class="table ">
          <thead>
            <tr>
              <th>
                <div class="form-check">
                  <input class="form-check-input allChecked" type="checkbox" value="" id="allChecked" onclick="selectPermissions()">
                  <label class="form-check-label" for="flexCheckDefault">
                    Permission
                  </label>
                </div>
              </th>
              <th>Can View</th>
              <th>Can Add/Edit</th>
              <th>Can Delete</th>
            </tr>
          </thead>
          <tbody>
            @foreach (var item in Model.permission)
            {

            <tr class="check" data-id="@item.PermissionId">
              <td>
                <div class="form-check">
                  <input class="form-check-input isSelected" type="checkbox" value="" >
                  <label class="form-check-label" for="flexCheckDefault">
                    @item.Name
                  </label>
                </div>
              </td>
              <td>
                <div class="form-check form-switch ">
                  <input class="form-check-input can-view" type="checkbox" id="can-view" name="darkmode" asp-for="@item.CanView" >
                </div>

              </td>
              <td>
                <div class="form-check form-switch ">
                  <input class="form-check-input can-add-edit" type="checkbox" id="can-add-edit" name="darkmode"   asp-for="@item.CanAddEdit" >
                </div>

              </td>
              <td>
                <div class="form-check form-switch ">
                  <input class="form-check-input can-delete" type="checkbox" id="can-delete" name="darkmode"   asp-for="@item.CanDelete" >
                </div>

              </td>
            </tr>
            }
          </tbody>
        </table>

      </div>
      <div class="d-flex  ms-3 mt-2 p-3 justify-content-end ">
       <button type="submit" class="btn  me-2" style="background-color: rgba(9, 9, 172, 0.692);color:white" onclick="savePermissions()">Save</button>
      <a type="submit" class="btn" style="border-color:rgba(9, 9, 172, 0.692);  color:rgba(9, 9, 172, 0.692); background-color: white;" asp-action="Index" asp-controller="RolesAndPermissions" formnovalidate>Cancel</a>
      </div>
    </div>
  </div>
  @section Scripts{
    <script>
      function selectPermissions(){

        let checkboxes=document.querySelectorAll(".isSelected");
        if(document.querySelector(".allChecked").checked)
        { 
            checkboxes.forEach(i=>{
              i.checked="true";
            });
        }
        return checkboxes;
      }
      function checkedPermissions()
      {
        let selectedPermissions=[];
        let checkboxes=selectPermissions();
        checkboxes.forEach(checkbox=>{
          if(checkbox.checked)
          {
            let row=checkbox.closest(".check");
            let permissionId=row.dataset.id;
            let canAddEdit=row.querySelector(".can-add-edit").checked;
            let canView=row.querySelector(".can-view").checked;
            let canDelete=row.querySelector(".can-delete").checked;

            selectedPermissions.push({
              permissionId:permissionId,
              canAddEdit:canAddEdit,
              canDelete:canDelete,
              canView:canView
            })
          }
        })
      return selectedPermissions;
      }

      function savePermissions()
      {
        let data=checkedPermissions();
        console.log("@Model.RoleId");
        $.ajax({
          url:"@Url.Action("EditPermissions","RolesAndPermissions",new{roleId=@Model.RoleId})",
          type:"POST",
          contentType:"application/json ",
          data:JSON.stringify(data),
          success:function(response){
            if(response.redirectUrl)
            {
              window.location.href=response.redirectUrl;
            }
          }
        })
      }
    </script>
  }