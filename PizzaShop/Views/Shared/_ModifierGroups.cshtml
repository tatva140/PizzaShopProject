@model DAL.ViewModels.MenuModifiersViewModel;

<div class="row mt-3 ms-1 ">
    <div class="row mt-3 mb-3" id="categoryaccordian">
        <div class=" col p-0">
            <div class="accordion accordion-flush mt-md-2 mt-0 shadow rounded-lg " id="accordionFlushExample">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="flush-headingOne">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                            data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne"
                            style="color:rgb(30, 151, 231);font-weight: 700; font-size: 25px;">
                            Modifier Group
                        </button>
                    </h2>
                    <div id="flush-collapseOne" class="accordion-collapse collapse" aria-labelledby="flush-headingOne"
                        data-bs-parent="#accordionFlushExample">
                        <div class="accordion-body ">
                            <div class="text-end">
                                <button class="me-3" id="add" data-bs-toggle="modal" data-bs-target="#addModifierGroup"
                                    style=" color: rgb(30, 151, 231); border: 2px solid rgb(30, 151, 231);background-color: rgb(250, 250, 250); "><i
                                        class="fa-regular fa-plus me-2"></i>Add Modifier Group</button>
                            </div>
                            <ul class=" overflow-auto mt-2 p-0" style="max-height: 500px;">
                                @foreach (var mg in Model.modifierGroups)
                                {
                                    <a style="text-decoration: none; color: black;cursor: pointer;"
                                        onclick="fetchModifiers(@mg.ModifierGroupId)">
                                        <li style="list-style: none;">
                                            <div class="d-flex align-items-center justify-content-between actionshover">
                                                <div class="d-flex align-items-center justify-content-center mt-3">
                                                    <i class="fa-solid fa-table me-2"></i>
                                                    <div>@mg.ModifierGroupName</div>
                                                </div>
                                                <div
                                                    class="d-flex align-items-center justify-content-end me-2 actions mt-3">
                                                    <i class="fa-solid fa-pen me-3 ms-3" style="cursor: pointer; "
                                                        data-bs-toggle="modal" data-bs-target="#editModifierGroup"
                                                        onclick="setEditId(@mg.ModifierGroupId)"></i>
                                                    <i class="fa-solid fa-trash" style="cursor: pointer;"
                                                        data-bs-toggle="modal" data-bs-target="#deleteModifierGroup"
                                                        onclick="delId(@mg.ModifierGroupId)"></i>
                                                </div>
                                            </div>
                                        </li>
                                    </a>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-2 border  p-2 shadow rounded-lg" style="background-color: rgb(250, 250, 250);" id="category">

        <div class="d-flex overflow-hidden  align-items-center justify-content-between w-auto p-2 ">
            <div style="color: rgb(30, 151, 231); font-weight: 700; font-size: 25px; ">Modifier Group
            </div>
            <button class="text-end ms-3 " id="add" data-bs-toggle="modal" data-bs-target="#addModifierGroup"
                style=" color: rgb(30, 151, 231); border: 2px solid rgb(30, 151, 231);background-color: rgb(250, 250, 250); "><i
                    class="fa-regular fa-plus"></i></button>
        </div>
        <ul class="p-2 overflow-auto mt-2" style="max-height: 400px;">
            @foreach (var mg in Model.modifierGroups)
            {
                <a style="text-decoration: none; color: black;cursor: pointer;"
                    onclick="fetchModifiers(@mg.ModifierGroupId)">
                    <li style="list-style: none;">
                        <div class="d-flex align-items-center justify-content-between actionshover">
                            <div class="d-flex align-items-center justify-content-center mt-3">
                                <i class="fa-solid fa-table me-2"></i>
                                <div>@mg.ModifierGroupName</div>
                            </div>
                            <div class="d-flex align-items-center justify-content-end me-2 actions mt-3">
                                <i class="fa-solid fa-pen me-3 ms-3" style="cursor: pointer; " data-bs-toggle="modal"
                                    data-bs-target="#editModifierGroup" onclick="setEditId(@mg.ModifierGroupId)"></i>
                                <i class="fa-solid fa-trash" style="cursor: pointer;" data-bs-toggle="modal"
                                    data-bs-target="#deleteModifierGroup" onclick="delId(@mg.ModifierGroupId)"></i>
                            </div>
                        </div>
                    </li>
                </a>
            }

        </ul>
    </div>
    <div class="col border bg-white shadow rounded-lg">
        <div class="row">
            <div class="col  p-2  ">
                <div class="d-flex align-items-center justify-content-between p-2">
                    <div style="color: rgb(30, 151, 231); font-weight: 700; font-size: 25px; ">Modifiers
                    </div>
                    <button class="addItembtn btn btn-primary " data-bs-toggle="modal" data-bs-target="#addModifier">+
                        New
                        Modifier</button>
                </div>
            </div>
        </div>
        <div id="rendermodifiers"></div>
    </div>
</div>

<div class="modal" id="addModifierGroup">
    <div class="modal-dialog modal-dialog-centered ">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" style="color:rgba(9, 9, 172, 0.692) ;">Add Modifier Group</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
                <form id="addModifierForm">

            <div class="modal-body">
                <div class="form-floating mb-3">
                    <input type="text" class="form-control" id="modifierGroupName" name="Name" placeholder="Name"
                        asp-for="@Model.modifierGroup.ModifierGroupName">
                    <label for="name">Name</label>
                    <span asp-validation-for="ModifierGroupName" class="text-danger "></span>

                </div>
                <div class="form-floating mb-3">
                    <textarea class="form-control" id="mgdescription" name="Description" placeholder="Description"
                        asp-for="@Model.modifierGroup.Description"></textarea>
                    <label for="description">Description</label>
                </div>
                <a style="text-decoration: none; cursor:pointer; color:blue;" data-bs-dismiss="modal"
                    onclick="openExistingModifierModel(1)">+ Add Existing
                    Modifiers</a>
                <div id="selectedModifiers"></div>
            </div>
            <div class="modal-footer d-flex  align-items-center justify-content-end">
                <button type="button" class="btn  me-2" style="background-color: rgba(9, 9, 172, 0.692);color:white"
                    onclick="addModifierGroup()">Add</button>
                <button type="button" class="btn"
                    style="border-color:rgba(9, 9, 172, 0.692);  color:rgba(9, 9, 172, 0.692); background-color: white;"
                    data-bs-dismiss="modal" aria-label="Close" formnovalidate>Cancel</button>
            </div>
                </form>
        </div>
    </div>
</div>
<div class="modal" id="existingModifiers">
    <div class="modal-dialog modal-dialog-centered ">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" style="color:rgba(9, 9, 172, 0.692) ;">Add Modifier Group</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class=" ms-2 " style="position:relative; ">
                    <input type="text" id="modalState" hidden>
                    <input type="text" class="form-control " placeholder="Search" name="search" id="search"
                        style="position: relative;right: 10px;" onkeyup="search()">
                    <span style="position: absolute; right: 20px;top:50%; transform: translateY(-60%); font: 15px;"><i
                            class="fa-solid fa-search"></i> </span>
                </div>
                <div id="renderModifierTable"></div>
            </div>
            <div class="modal-footer d-flex  align-items-center justify-content-end">
                <button type="submit" class="btn  me-2" style="background-color: rgba(9, 9, 172, 0.692);color:white"
                    onclick="saveExistingModifiers()" data-bs-dismiss="modal">Add</button>
                <button type="button" class="btn"
                    style="border-color:rgba(9, 9, 172, 0.692);  color:rgba(9, 9, 172, 0.692); background-color: white;"
                    data-bs-dismiss="modal" aria-label="Close" formnovalidate>Cancel</button>
            </div>
        </div>
    </div>
</div>
<div class="modal" id="editModifierGroup">
    <div class="modal-dialog modal-dialog-centered ">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" style="color:rgba(9, 9, 172, 0.692) ;">Edit Modifier Group</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
                <form id="editModifierForm">
            <div class="modal-body">
                <input type="text" class="form-control" id="modifierGId" name="ModifierGroupId"
                    placeholder="ModifierGroupId" asp-for="@Model.modifierGroup.ModifierGroupId" hidden>
                <div class="form-floating mb-3">
                    <input type="text" class="form-control" id="modifierGName" name="Name" placeholder="Name"
                        asp-for="@Model.modifierGroup.ModifierGroupName">
                    <label for="name">Name</label>
                    <span asp-validation-for="ModifierGroupName" class="text-danger "></span>

                </div>
                <div class="form-floating mb-3">
                    <textarea class="form-control" id="modifierGDescription" name="Description"
                        placeholder="Description" asp-for="@Model.modifierGroup.Description"></textarea>
                    <label for="description">Description</label>
                </div>
                <a style="text-decoration: none; cursor:pointer; color:blue;" data-bs-dismiss="modal"
                    onclick="openExistingModifierModel(0)">+ Add Existing
                    Modifiers</a>
                <div id="editselectedModifiers"></div>
            </div>
            <div class="modal-footer d-flex  align-items-center justify-content-end">
                <button type="button" class="btn  me-2" style="background-color: rgba(9, 9, 172, 0.692);color:white"
                    onclick="editModifierGroup()" >Edit</button>
                <button type="button" class="btn"
                    style="border-color:rgba(9, 9, 172, 0.692);  color:rgba(9, 9, 172, 0.692); background-color: white;"
                    data-bs-dismiss="modal" aria-label="Close" formnovalidate>Cancel</button>
            </div>
            </form>
        </div>
    </div>
</div>
<div class="modal" id="deleteModifierGroup">
    <div class="modal-dialog modal-dialog-centered ">
        <div class="modal-content">

            <div class="modal-body text-center">
                <img src="images/toppng.com-warning-icon-2400x2400.png" alt="Image" class="img-fluid me-2 "
                    style="font: 30px; height: 80px;" class="">
                <h3>Are you sure you want to delete this category?</h3>

                <input type="text" id="delmodifierGroupId" hidden>
                <div class="modal-footer d-flex  align-items-center justify-content-center">
                    <button type="submit" class="btn btn-danger align-items center" data-bs-dismiss="modal"
                        onclick="deleteModifierGroup()">Yes</button>
                    <button type="button" class="btn btn-primary align-items center" data-bs-dismiss="modal">No</button>
                </div>

            </div>
        </div>
    </div>
</div>
<partial name="_Notification"/>

<script>
    modifierId=0;
    $(document).ready(function () {
        modifierId=@(Model.ShowList!=null?Model.ShowList:0);
        if(modifierId==0){
         modifierId =@(Model.modifierGroups.Count > 0 ? Model.modifierGroups[0].ModifierGroupId : 0);
        }
        fetchModifiers(modifierId);
    });
    function fetchModifiers(id) {
        $.ajax({
            url: "/Menu/Modifiers",
            type: "GET",
            data: { modifierId: id },
            success: function (response) {
                $("#rendermodifiers").html(response);
            }
        });
    }
    function openExistingModifierModel(flag) {
        //0-edit,1-add
        if(flag==1){
            document.getElementById("modalState").value=1;
        }else{
            document.getElementById("modalState").value=2;
        }
        $("#existingModifiers").modal("show");
        $.ajax({
            url: "/Menu/ModifierTable",
            type: "GET",
            success: function (response) {
                $("#renderModifierTable").html(response);
            }
        });
       $("tbody tr").each(function () {
            let row = $(this);
            let existingSelection = selectedItems.includes(row.data("id"));
            let isSelected = row.find(".individual");
                if (existingSelection) {
                    isSelected.prop("checked", true);
                }else{
                    isSelected.prop("checked", false);
                }
            
        });
    }

    selectedItems = [];
    function saveExistingModifiers(flag) {
        //0-edit,1-add
        let modalState=document.getElementById("modalState").value;
        $("tbody tr").each(function () {
            let row = $(this);
            let isSelected = row.find(".individual").prop("checked");
            let existingSelection = selectedItems.includes(row.data("id"));
            if (isSelected) {
                if (!existingSelection) {
                    selectedItems.push({ id: row.data("id"), name: row.data("name") });
                }
            }
        });
        modifierDiv="";
        if(modalState==1){
        new bootstrap.Modal(document.getElementById("addModifierGroup")).show();
        new bootstrap.Modal(document.getElementById("editModifierGroup")).hide();
         modifierDiv = document.getElementById("selectedModifiers");
        }else{
        new bootstrap.Modal(document.getElementById("editModifierGroup")).show();
        new bootstrap.Modal(document.getElementById("addModifierGroup")).hide();
         modifierDiv = document.getElementById("editselectedModifiers");
        }
        selectedItems.forEach(modifier => {
            if ($(`#${modifier.id}`).length > 0) {
                console.log("hi");
                return;
            }
            let chip = document.createElement("span");
            chip.classList.add("chip");
            chip.setAttribute("id", modifier.id);
            chip.setAttribute("class", "chip");
            chip.innerHTML = `${modifier.name} <button class="close-btn" onclick="removeChip(this)">x</button>`;
            modifierDiv.appendChild(chip);
        })
    }
    function removeChip(ele) {
        let chip = ele.parentElement;
        let id = chip.getAttribute("id");
        selectedItems = selectedItems.filter(item=>item.id != id);
        chip.remove();
    }

    function addModifierGroup() {
        let ids = [];
        selectedItems.forEach(m => {
            ids.push(m.id);
        });
        let mgName = document.getElementById("modifierGroupName").value;
        let mgDescription = document.getElementById("mgdescription").value;
        if($("#addModifierForm").valid()){
            console.log("here");
        $.ajax({
            url: "/Menu/AddModifierGroup",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify({ modifierGroupName: mgName, Description: mgDescription, ids: ids }),
            success: function (response) {
                $(".modal").modal("hide");
                $("#modifiers").html(response);
            }
        });
        }
    }
    function delId(id) {
        document.getElementById("delmodifierGroupId").value = id;
    }
    function setEditId(id) {
        $.ajax({
            url: "/Menu/GetModifierGroupDetails",
            type: "GET",
            data: { id: id },
            success: function (response) {
                document.getElementById("modifierGName").value = response.modifierGroup.modifierGroupName;
                document.getElementById("modifierGDescription").value = response.modifierGroup.description;
            }
        });
        $.ajax({
            url: "/Menu/FetchModifier",
            type: "GET",
            data: { id: id },
            success: function (response) { 
                selectedItems=[]; 
                let modifierDiv = document.getElementById("editselectedModifiers");
                modifierDiv.innerHTML = '';
                response.modifier.forEach(modifier => {
                    selectedItems.push({ id: modifier.modifierId, name: modifier.modifierName });
                })
                selectedItems.forEach(modifier => {
                    let chip = document.createElement("span");
                    chip.classList.add("chip");
                    chip.setAttribute("id", modifier.id);
                    chip.innerHTML = `${modifier.name} <button class="close-btn" onclick="removeChip(this)">x</button>`;
                    modifierDiv.appendChild(chip);
                })
            }
        });
        document.getElementById("modifierGId").value = id;
    }
    function deleteModifierGroup() {
        let modifierGroupId = document.getElementById("delmodifierGroupId").value;
        $.ajax({
            url: "/Menu/DeleteModifierGroup",
            type: "POST",
            contentType: "application/json",
            data: modifierGroupId,
            success: function (response) {
                $("#modifiers").html(response);
            }
        });
    }
    function editModifierGroup() {
        let id = document.getElementById("modifierGId");
        let Name = document.getElementById("modifierGName").value;
        let Description = document.getElementById("modifierGDescription").value;
        let modifierGroup={
            ModifierGroupId:id.value,ModifierGroupName:Name,Description:Description
        }
        let ids = [];
        selectedItems.forEach(m => {
            ids.push(m.id);
        });
        if($("#editModifierForm").valid()){
        $.ajax({
            url: "/Menu/EditModifierGroup",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify({modifierGroup:modifierGroup, ids: ids }),
            success: function (response) {
                fetchModifiers(response.id);
                $(".modal").modal("hide");

            }
        });
        }
    }
</script>