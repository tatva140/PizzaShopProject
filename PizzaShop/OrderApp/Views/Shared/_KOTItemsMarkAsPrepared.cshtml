@model List<DAL.ViewModels.OrderAppKOTViewModel.KOTItemListViewModel>;
<div class="modal-body " >

    <div class="d-flex align-items-center justify-content-between " id="">
        <strong>Item </strong>
        <strong>Quantity</strong>
    </div>
    <hr>
    <div id="orderItemsContainer" style="height:200px;overflow-y:scroll;" class="overflow-auto">

        @foreach (var items in Model)
        {
            <div class="check " data-id="@items.ItemId" >
                <div class="d-flex align-items-center justify-content-between">
                    <div class="form-check">
                        <input class="form-check-input checkSelect" type="checkbox" value="">
                        <label class="form-check-label" for="flexCheckDefault">
                            @items.ItemName
                        </label>
                    </div>
                    <div style="border:1px solid rgba(0, 102, 167, 1);border-radius:5px; width: 80px;" class="text-center">
                        <div class="p-0 m-0"><i class="fa fa-minus me-2 ms-0"
                                onclick="minusCapacity(@items.ItemId)"></i><span id="@items.ItemId"> 1 </span><i
                                class="fa fa-plus ms-2 me-0" onclick="plusCapacity(@items.ItemId,@items.Quantity)"></i>
                    </div>
                </div>
            </div>
                @if (items.modifiers.Count != 0)
                {
                <div>
                    <ul>
                        @foreach (var modifier in items.modifiers)
                        {
                            <li class=" ms-3">@modifier.ModifierName</li>
                        }
                    </ul>
                </div>
            }
            </div>
            <hr>
        }
    </div>
</div>

<form>
    <div class="modal-footer d-flex  align-items-center justify-content-end">
        @if(Model[0].Status=="InProgress"){

        <button type="button" class="btn  align-items center" data-bs-dismiss="modal" style="background-color:rgba(0, 102, 167, 1);color:white;"
            onclick="markAsPrepared()">Mark As
            Prepared</button>
        }else{
             <button type="button" class="btn  align-items center" data-bs-dismiss="modal" style="background-color:rgba(0, 102, 167, 1);color:white;"
            onclick="markAsPrepared()">Mark As
            In Progress</button>
        }
        <button type="button" class="btn  align-items center" data-bs-dismiss="modal" style="border:1px solid rgba(0, 102, 167, 1) ;color:rgba(0, 102, 167, 1) ;">Cancel</button>
    </div>
</form>
</div>
<script>
    quantity = [];
    status='@Model[0].Status';
    orderId=@Model[0].OrderId;
    function plusCapacity(id, capacity) {
        var quantity = document.getElementById(id);
        if (quantity.textContent < capacity) {
            quantity.textContent = parseInt(quantity.textContent) + 1;

        }
    }
    function minusCapacity(id) {
        var quantity = document.getElementById(id);

        if (quantity.textContent > 0) {
            quantity.textContent = parseInt(quantity.textContent) - 1;
        }
    }
    function markAsPrepared() {
        debugger
        var checkboxes = document.querySelectorAll('.checkSelect:checked');
        console.log(checkboxes);
        var quantities = Array.from(document.querySelectorAll('.checkSelect:checked')).map(checkbox => {
            return checkbox.closest('.check').querySelector('span');
        });
        console.log(quantities);
        var orderItems = [];
        for (var i = 0; i < checkboxes.length; i++) {
            var itemId = checkboxes[i].parentElement.parentElement.parentElement.dataset.id;
            var quantity = quantities[i].textContent;
            orderItems.push({ itemId: itemId, quantity: quantity,status:status,orderId:orderId });
        }
        console.log(orderItems);
        $.ajax({
            type: "POST",
            url: '@Url.Action("MarkAsPrepared", "KOT")',
            data: JSON.stringify(orderItems),
            contentType: "application/json",
            success: function (response) {
                if(response.success==true)
                {
                    getOrders(categoryIdValue, categoryNameValue, status);
                    toastr.success("Order Marked As Prepared");
                }
            },
            error: function (error) {
                toastr.error("Failed to mark order as prepared");
            }
        });
    }
</script>