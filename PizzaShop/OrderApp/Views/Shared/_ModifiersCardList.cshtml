@model DAL.ViewModels.OrderAppMenuViewModel;
<div>
    <div>
        @if (Model.modifierGroupDetails.Count == 0)
        {
            <div>No Records Found</div>
            return;
        }
        @foreach (var modifiergroups in Model.modifierGroupDetails)
        {
            <div class="mt-2">
                <strong>@modifiergroups.ModifierGroupName</strong> @( "(You can choose Minimum-" +
                           modifiergroups.Min + " & Maximum-" +
                           modifiergroups.Max + " options)")
        </div>
        <div class="d-flex align-items-center justify-content-start gap-2 mt-2">
            @foreach (var modifiers in modifiergroups.modifiers)
                {
                    <div class="p-0 mt-2 position-relative"
                        onclick="selectModifier(@modifiers.ModifierId,'@modifiers.ModifierName',@modifiers.Rate,@modifiergroups.Min,@modifiergroups.Max,@modifiergroups.ModifierGroupId) ">
                        <div class="d-flex flex-column align-items-start justify-content-center p-2 "
                            style="width:150px;border:1px solid black;border-radius:10px;" id=@modifiers.ModifierId>
                            <div class="mb-1">@modifiers.ModifierName</div>
                            <div>@("â‚¹" + modifiers.Rate)</div>
                        </div>
                        <div
                            style="border-top-right-radius:10px;position: absolute; top: 0; right: 0; width: 0; height: 0; border-left: 30px solid transparent; border-top: 30px solid orange;">
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>
<script>
    modifierList = [];
    minmax = [];
    count = 0;
    function selectModifier(id, name, rate, min, max, modifierGroupId) {
        if(!minmax.some(m=>m.modifierGroupId==modifierGroupId)){

        minmax.push({ modifierGroupId: modifierGroupId, min: min, max: max, count: 0 });
        }
        if ($(`#${id}`).hasClass("modifierSelect")) {
            $(`#${id}`).removeClass("modifierSelect");
            modifierList = modifierList.filter(modifier => modifier.id != id);
            minmax = minmax.map(ele => {

                if (ele.modifierGroupId == modifierGroupId) {
                   return{
                        ...ele,count:ele.count-1
                   };
                }
                return ele;
            });
        } else {
            $(`#${id}`).addClass("modifierSelect");
            modifierList.push({ id: id, ModifierName: name, Rate: rate });
            minmax = minmax.map(ele => {

                if (ele.modifierGroupId == modifierGroupId) {
                   return{
                        ...ele,count:ele.count+1
                   };
                }
                return ele;
            });

        }
       
    }
</script>