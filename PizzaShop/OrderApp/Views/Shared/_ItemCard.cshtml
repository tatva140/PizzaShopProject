@model DAL.ViewModels.OrderAppMenuViewModel;
<div class="overflow-auto mt-3" style="max-height:700px;scrollbar-width: thin;">
    <div class="d-flex align-items-center justify-content-conter gap-3 flex-wrap">
        @foreach (var items in Model.items)
        {

            <div class="p-0 mt-2 position-relative"
                style="height: 70px;width:300px; background-color:white;border-radius: 10px;"
                onclick="openModifierModal(@items.ItemId,'@items.Name',@items.Rate)">
                <div class="d-flex flex-align-items-center justify-content-start p-0 pl-0" style="height: 100%;">
                    <div style="border-radius: 15px; height: 70px; width: 70px;"
                        class="shadow d-flex justify-content-center align-items-center">
                        @if (items.ItemImg != null)
                        {
                            <img src="@Url.Content(items.ItemImg)" class="img-fluid rounded-pill"
                                style="height: 70px; width: 70px;">
                        }
                        else
                        {
                            <img src="~/images/dining-menu.png" class="img-fluid rounded-pill"
                                style="height: 70px; width: 70px;">
                        }
                    </div>
                    <div class="d-flex flex-column align-items-start justify-content-center ms-2 " style="width:230px;">
                        <div class="mb-1">@items.Name</div>
                        <div class="mt-1 d-flex align-items-center justify-content-between w-100">
                            <div>@("₹" + items.Rate)</div>
                            <div>
                                @if (items.Isfavourite == true)
                                {

                                    <i class="fa-solid fa-heart me-3" style="cursor: pointer;"
                                        onclick="fav(this,@items.ItemId)"></i>
                                }
                                else
                                {

                                    <i class="fa-regular fa-heart me-3" style="cursor: pointer;"
                                        onclick="fav(this,@items.ItemId)"></i>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                @if (items.ItemType == "veg")
                {

                    <div
                        style="position: absolute; top: 0; right: 0; width: 0; height: 0; border-left: 30px solid transparent; border-top: 30px solid green;">
                    </div>
                }
                else if (items.ItemType == "non-veg")
                {
                    <div
                        style="position: absolute; top: 0; right: 0; width: 0; height: 0; border-left: 30px solid transparent; border-top: 30px solid red;">
                    </div>

                }
                else
                {
                    <div
                        style="position: absolute; top: 0; right: 0; width: 0; height: 0; border-left: 30px solid transparent; border-top: 30px solid orange;">
                    </div>

                }
            </div>
        }

    </div>
</div>
<div class="modal " id="modifierModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog   modal-dialog-scrollable modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h3 id="itemName"></h3>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="modifierRender"></div>
            </div>
            <form>
                <input type="text" id="itemid" hidden>
                <input type="text" id="itemRate" hidden>
                <div class="modal-footer d-flex  align-items-center justify-content-end">
                    <button type="button" class="btn  align-items center"
                        style="background-color: rgba(0, 102, 167, 1);color:white;" onclick="addModifier()">Add</button>
                    <button type="button" class="btn  align-items center" data-bs-dismiss="modal"
                        style="border: 1px solid rgba(0, 102, 167, 1);color:rgba(0, 102, 167, 1);;">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    function fav(e, id) {
        e.classList.toggle("fa-solid");
        e.classList.toggle("fa-regular");
        flag = false;
        if (e.classList.contains("fa-regular")) {
            flag = false;
        } else {
            flag = true;
        }
        $.ajax({
            url: "/OrderMenu/FavouriteItem",
            type: "GET",
            data: { id: id, flag: flag },
            success: function (response) {
                itemFetch(-1);
            }
        });
    }
    function openModifierModal(id, name, rate) {
        $("#modifierModal").modal("show");
        modifierList = [];
        document.getElementById("itemName").innerText = name;
        document.getElementById("itemid").value = id;
        document.getElementById("itemRate").value = rate;
        document.getElementById("itemRate").value = rate;
        $.ajax({
            url: "/OrderMenu/GetModifierDetails",
            type: "GET",
            data: { id: id },
            success: function (response) {
                $("#modifierRender").html(response);
            }
        });
    }
    itemLists = [];
    items = [];
    flag = true;
    function addModifier() {
        flag = true;
        if (minmax.length > 0) {
            for (let i = 0; i < minmax.length; i++) {
                if (minmax[i].count < minmax[i].min) {
                    flag = false;
                } else if (minmax[i].count > minmax[i].max) {
                    flag = false;
                }
            }
        }
        if (flag == false) {
            toastr.error("Please select valid number of modifiers");
            return;
        }
        items = [];
        itemid = document.getElementById("itemid").value;
        itemName = document.getElementById("itemName").innerText;
        itemRate = document.getElementById("itemRate").value;
        const hasModifiers=itemLists.some(i=>i.modifierLists.some(existing=>modifierList.some(newMod=>newMod.id===existing.id)));
        
        if (itemLists.some(i=>i.ItemId==itemid) && hasModifiers) {
            toastr.error("Item is already added.");
            return;
        }
        items.push({ ItemId: itemid, ItemName: itemName, Rate: itemRate, modifierLists: modifierList });
        itemLists.push({ ItemId: itemid, ItemName: itemName, Rate: itemRate, modifierLists: modifierList });
        $.ajax({
            url: "/OrderMenu/RenderNewOrderItem",
            type: "POST",
            contentType: 'application/json',
            data: JSON.stringify(items),
            success: function (response) {
                $(".modal").hide();
                $(".modal-backdrop").remove();
                $('body').removeClass('modal-open');
                $(".itemrenderer").append(response);
                uid = document.getElementById(`uid${itemid}`).value;
                modifierList = [];
                total = 0;
                itemVal = document.querySelector(`.itemQuantity${uid}`).innerText;
                modifierVal = document.querySelector(`.modifier${uid}`).innerText;
                taxes = document.querySelectorAll(".tax");
                $(".subTotal").html((parseFloat(document.querySelectorAll(".subTotal")[0].innerText) + parseFloat(itemVal) + parseFloat(modifierVal)).toFixed(2));
                taxes.forEach(ele => {
                    ele.innerText = "₹" + (ele.dataset.tax * parseFloat(document.querySelectorAll(".subTotal")[0].innerText)) / 100;
                    total += (ele.dataset.tax * parseFloat(document.querySelectorAll(".subTotal")[0].innerText)) / 100;
                });
                $(".total").html((parseFloat(document.querySelectorAll(".subTotal")[0].innerText) + total/2).toFixed(2) );
            }
        });
    }

</script>