@model DAL.ViewModels.OrderAppTablesViewModel;
@{
    Layout = "~/OrderApp/Views/Shared/_LayoutOrderApp.cshtml";
    ViewData["HideLayout"] = "false";
}
<div class="cont p-3">
    <div class="row">
        <div class="col-sm-6 col-12 ">
            <h1 style="color: rgba(0, 102, 167, 1);">Table View</h1>
        </div>
        <div class="col-sm-6 col-12 ">
            <div class="d-flex align-items-center justify-content-sm-end  justify-content-start  flex-wrap">
                <div style="font-size: large;" class="me-3"><i class="fa-solid fa-circle me-2"
                        style="color:rgb(211, 205, 205);"></i>Available</div>
                <div style="font-size: large;" class="me-3"><i class="fa-regular fa-circle me-2"
                        style="color: #63E6BE;"></i>Selected</div>
                <div style="font-size: large;" class="me-3"><i class="fa-solid fa-circle me-2"
                        style="color: #63E6BE;"></i>Assigned</div>
                <div style="font-size: large;" class="me-3"><i class="fa-solid fa-circle me-2"
                        style="color: #74C0FC;"></i>Running</div>
            </div>
        </div>
    </div>
    <div class="row ">
        <div class="accordion accordion-flush" id="accordionFlushExample">
            @foreach (var sec in Model.Sections)
            {
                <div class="accordion-item mt-2">
                    <div class="accordion-header p-3 " id="flush-headingOne">
                        <div class="row">
                            <div class="col-sm-6 col-12 ">
                                <i class="fa-solid fa-angle-down p-2 me-2" type="button" data-bs-toggle="collapse"
                                    style="color:rgba(0, 102, 167, 1);border: 1px solid rgba(0, 102, 167, 1);; border-radius: 80%;"
                                    data-bs-target="@($"#section{@sec.SectionId}")" aria-expanded="false"
                                    aria-controls="flush-collapseOne">
                                </i><strong style="color:rgba(0, 102, 167, 1);font-size: large;">@sec.SectionName</strong>
                            </div>
                            <div class="col-sm-6 col-12 ">
                                <div class="d-flex align-items-center justify-content-end    flex-wrap">
                                    <div style="font-size: large;" class="me-3"><i class="fa-solid fa-circle me-2"
                                            style="color:rgb(211, 205, 205);"></i>@sec.Available</div>
                                    <div style="font-size: large;" class="me-3"><i class="fa-solid fa-circle me-2"
                                            style="color: #63E6BE;"></i>@sec.Assigned</div>
                                    <div style="font-size: large;" class="me-3"><i class="fa-solid fa-circle me-2"
                                            style="color: #74C0FC;"></i>@sec.Running</div>
                                    <button
                                        style="font-size: large;color:rgba(0, 102, 167, 1);background-color:white;border:1px solid rgba(0, 102, 167, 1);"
                                        class="me-3 p-1"
                                        onclick="openWaitingTokenModel(@sec.SectionId,'@sec.SectionName')"><i
                                            class="fa-solid fa-plus me-2" style="color:rgba(0, 102, 167, 1);"></i>Waiting
                                        Token</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="@($"section{@sec.SectionId}")" class="accordion-collapse collapse "
                        aria-labelledby="flush-headingOne" data-bs-parent="#accordionFlushExample">
                        <div class="accordion-body">
                            <div class="d-flex flex-wrap gap-3">
                                @foreach (var details in sec.Tables)
                                {
                                    <div class="@($"tablecard{@details.Status}") p-3"
                                        onclick="tableselect(@details.TableId,'@details.Status',@details.Capacity,@sec.SectionId,this)"
                                        id="@details.TableId">
                                        <div class="row">
                                            <div class="col-8">
                                                @details.TableName
                                            </div>
                                            <div class="col-4">
                                                @(details?.TotalAmount!=null ? ("â‚¹" + details?.TotalAmount) : "")
                                            </div>
                                        </div>
                                        <div class="row mt-2">
                                            <div class="col-8">
                                                <i class="fa-solid fa-users"></i>
                                            </div>
                                            <div class="col-4">
                                                <i class="fa-solid fa-clock"></i>
                                            </div>
                                        </div>
                                        <div class="row mt-2">
                                            <div class="col-4">
                                                @details?.Capacity
                                            </div>
                                            <div class="col-7 text-end " style="word-wrap: break-word;">
                                                @if (details?.Duration.Days != null)
                                                {
                                                    @(details?.Duration.Days + "days " )
                                                    ;
                                                }
                                                @if (details?.Duration.Hours != null)
                                                {
                                                    @(details?.Duration.Hours + "hr " )
                                                    ;
                                                }
                                                @if (details?.Duration.Minutes != null)
                                                {
                                                    @(details?.Duration.Minutes + "mins ")
                                                    ;
                                                }
                                                @if (details?.Duration.Seconds != null)
                                                {
                                                    @(details?.Duration.Seconds + "secs ")
                                                    ;
                                                }
                                                @if (details?.Duration == null)
                                                {
                                                    @("0 mins ")
                                                    ;
                                                }

                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                            <input id="sectionname" value="@sec.SectionName" hidden>
                            <div class="row mt-2 me-2 d-flex align-items-center justify-content-end">
                                <button class="btn  w-auto" style="color:white;background-color:rgba(0, 102, 167, 1);"
                                    onclick="openAssignModal(@sec.SectionId,'@sec.SectionName')">Assign</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<div class="modal fade modal-right" id="assignModal">
    <div class="modal-dialog modal-right">
        <div class="modal-content   h-100 no-radius">
            <div class="modal-header">
                <div class="  text-start p-0">
                    <h4 style="color: rgba(0, 102, 167, 1);">Waiting Token</h4>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body text-center ms-3 me-3 mt-2 p-0">
                <input type="text" id="sectionId" hidden>
                <div id="waitingTokenList"></div>
                <div class="  text-start p-0">
                    <h4 style="color: rgba(0, 102, 167, 1);">Customer Details</h4>
                </div>
                <form id="assignTableForm">
                    <div id="customerDetails"></div>
                    <div class="modal-footer d-flex  align-items-center justify-content-end">
                        <button type="button" class="btn btn-primary align-items center"
                            onclick="assignCustomerTable()">Assign</button>
                        <button type="button" class="btn btn-light align-items center"
                            data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal" id="waitingTokenModal">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content  ">
            <div class="modal-header">
                <div class="  text-start p-0">
                    <h4 style="color: rgba(0, 102, 167, 1);">Waiting Token Details</h4>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body text-center ms-3 me-3 mt-2 p-0">
                <input type="text" id="waitingTokensectionId" hidden>

                <form id="waitingTokenForm">
                    <div id="waitingTokenCustDetails"></div>
                    <div class="modal-footer d-flex  align-items-center justify-content-end">
                        <button type="button" class="btn btn-primary align-items center"
                            onclick="addWaitingToken()">Save</button>
                        <button type="button" class="btn btn-light align-items center"
                            data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

    <script>
        $(".tablecardAssigned").addClass("assignedtable");
        $(".tablecardRunning").addClass("runningtable");
        $(".tablecardAvailable").addClass("availabletable");
        selectedTables = [];
        totalCapacity = [];
        waitingTokenId = 0;
        sectionId;
        customerSectionId = 0;
        customerSectionName = 0;
        function tableselect(id, status, capacity, secId, e) {
            if (secId != sectionId) {
                for (let i = 0; i < selectedTables.length; i++) {
                    $(`#${selectedTables[i]}`).removeClass("selectedtable");
                }
                selectedTables = [];
                totalCapacity = [];
            }
            if (status == "Available") {
                if (selectedTables.includes(id)) {
                    $(e).removeClass("selectedtable");
                    selectedTables = selectedTables.filter(table => table != id);
                    totalCapacity = totalCapacity.filter(tp => tp.id != id);
                } else {
                    selectedTables.push(id);
                    totalCapacity.push({ id: id, noOfPersons: capacity });
                    sectionId = secId;
                    $(e).addClass("selectedtable");
                }
            } else {
                toastr.error(`Table Already ${status}`);
            }
        }
        function openAssignModal(id, sectionName) {
            if (selectedTables.length == 0) {
                toastr.error("Select Atleast 1 table.");
            } else {
                customerSectionId = id;
                customerSectionName = sectionName;
                $("#assignModal").modal("show");
                document.getElementById("sectionId").value = id;
                $.ajax({
                    url: "/Tables/WaitingTokenList",
                    type: "Get",
                    data: { id: id },
                    success: function (response) {
                        $("#waitingTokenList").html(response);
                    }
                });
                $.ajax({
                    url: "/Tables/CustomerDetails",
                    type: "Get",
                    data: { email: "" },
                    success: function (response) {
                        $("#customerDetails").html(response);
                        let sectionDropdown = document.querySelectorAll(".sectionsName");
                        sectionDropdown.forEach(dropdown => {
                            dropdown.disabled = true;
                            let option = document.createElement("option");
                            option.value = customerSectionId;
                            option.text = customerSectionName;
                            dropdown.add(option);
                            dropdown.value = customerSectionId;
                        });

                    }
                });

            }
        }
        function fetchCustomer(e) {
            $(".radiobtn").prop("checked", false);
            email = e.target.value;
            waitingTokenId = 0;
            $.ajax({
                url: "/Tables/CustomerDetails",
                type: "Get",
                data: { email: email },
                success: function (response) {
                    if (response.message != "Error") {
                        $("#customerDetails").html(response);
                        $("#waitingTokenCustDetails").html(response);
                        let sectionDropdown = document.querySelectorAll(".sectionsName");
                        sectionDropdown.forEach(dropdown => {
                            dropdown.disabled = true;
                            let option = document.createElement("option");
                            option.value = customerSectionId;
                            option.text = customerSectionName;
                            dropdown.add(option);
                            dropdown.value = customerSectionId;
                        });
                        document.getElementById("NoOfPerson").value = 0;
                    } else {
                        document.getElementById("Name").value = "";
                        document.getElementById("Phone").value = "";
                        document.getElementById("NoOfPerson").value = 0;
                    }

                }
            });
        }
        function fetchWaitingTokenCustomer(email, waitingToken) {

            waitingTokenId = waitingToken;

            $.ajax({
                url: "/Tables/WaitingTokenCustomerDetails",
                type: "Get",
                data: { email: email },
                success: function (response) {
                    if (response.message != "Error") {
                        $("#customerDetails").html(response);
                        let sectionDropdown = document.querySelectorAll(".sectionsName");
                        sectionDropdown.forEach(dropdown => {
                            dropdown.disabled = true;
                            let option = document.createElement("option");
                            option.value = customerSectionId;
                            option.text = customerSectionName;
                            dropdown.add(option);
                            dropdown.value = customerSectionId;
                        });
                    } else {
                        document.getElementById("Name").value = "";
                        document.getElementById("Phone").value = "";
                        document.getElementById("NoOfPerson").value = 0;
                    }
                }
            });
        }
        function assignCustomerTable() {
            sum = 0;
            id = document.getElementById("sectionId").value;
            var formdata = new FormData($("#assignTableForm")[0]);
            formdata.append("sectionId", id);
            formdata.append("selectedTables",JSON.stringify(selectedTables));
            for (let i = 0; i < totalCapacity.length; i++) {
                sum += totalCapacity[i].noOfPersons;
            }
            if (sum < formdata.get("NoOfPersons")) {
                toastr.error("NoOfPersons exceeds the table capacity.");
                return;
            }

            if ($("#assignTableForm").valid()) {
                $.ajax({
                    url: "/Tables/AssignTable",
                    type: "POST",
                    contentType:false,
                    processData:false,
                    data:formdata,
                    success: function (response) {
                            if(response.message="Added"){
                            window.location.href = "/Tables";
                            }
                    }
                });
            }
        }
        function openWaitingTokenModel(id, sectionName) {
            customerSectionId = id;
            customerSectionName = sectionName;
            $("#waitingTokenModal").modal("show");
            document.getElementById("waitingTokensectionId").value = id;
            $.ajax({
                url: "/Tables/CustomerDetails",
                type: "Get",
                data: { email: "" },
                success: function (response) {
                    $("#waitingTokenCustDetails").html(response);
                    let sectionDropdown = document.querySelectorAll(".sectionsName");
                    sectionDropdown.forEach(dropdown => {
                        dropdown.disabled = true;
                        let option = document.createElement("option");
                        option.value = customerSectionId;
                        option.text = customerSectionName;
                        dropdown.add(option);
                        dropdown.value = customerSectionId;
                    });

                }
            });
        }
        function addWaitingToken() {
            id = document.getElementById("waitingTokensectionId").value;

            var formdata = new FormData($("#waitingTokenForm")[0]);
            formdata.append("sectionId", id);

            if ($("#waitingTokenForm").valid()) {
                $.ajax({
                    url: '/Tables/AddWaitingToken',
                    type: "POST",
                    contentType: false,
                    processData: false,
                    data: formdata,
                    success: function (response) {
                        if (response.status == false) {
                            toastr.error(response.message);
                        } else {
                            toastr.success(response.message);
                        }
                        $(".modal").modal("hide");
                    }
                });
            }

        }
    </script>
}